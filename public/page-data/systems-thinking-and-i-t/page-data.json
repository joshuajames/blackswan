{"componentChunkName":"component---src-templates-blog-post-js","path":"/systems-thinking-and-i-t/","result":{"data":{"post":{"id":"cG9zdDoyMg==","excerpt":"<p>Everywhere we look in the system for delivering value with software there are opportunities to make improvements that might work well for one part, but have a negative effect on &#8230; </p>\n<div><a href=\"/systems-thinking-and-i-t/\" class=\"more-link\">Read More</a></div>\n","content":"<p>Everywhere we look in the system for delivering value with software there are opportunities to make improvements that might work well for one part, but have a negative effect on the whole. Systems Thinking is about understanding the purpose of the whole and making improvements with the whole in mind.</p>\n<p>To quote Wikipedia:</p>\n<blockquote><p><em>“Systems thinking is… based on the belief that the component parts of a system can best be understood in the context of relationships with each other and with other systems, <strong>rather than in isolation</strong>”. [emphasis mine.]</em></p></blockquote>\n<p>For instance, let’s consider the funding and approval process. Approving and funding a large “batch” of requirements for which benefits, costs and delivery date are known makes it much easier for those who are approving. They can easily ensure value for money, check alignment with business strategy and enforce alignment with technology strategy. Because of the time and cost of pulling all the key individuals together to review it appears to make perfect sense to do this as efficiently as possible: review and approve them as a large batch, monitor their progress to the delivery date as a large batch and finally track the benefits as a large batch.</p>\n<p>Or does it? Unfortunately, what works well for the project approval process has a number of rather negative effects on the whole system. In systems thinking, this is the dreaded “unintended consequences”. Here are three effects we often see as a result of large batches in the upstream funding and approval process:</p>\n<ol>\n<li>Possibly the worst effect is that it drives analysis work upstream of the approval process. How else can we “know” the costs, benefits and delivery date of the requirements in the batch? What starts out as a mechanism for controlling costs ironically results in driving up costs (and time) and pushing work “off the page”, reducing visibility and control.</li>\n<li>The second is that valuable and urgent new ideas must now effectively wait in line for consideration. For some, this may mean months and months of waiting. Whilst the paperwork for approval might seem quick and simple to the designers, any binary (yes/no) control system like this often ends up overly bureaucratic, complex and full of red tape. Big batch processes typically get bigger and slower over time. Time and time again we see examples where “No” doesn’t actually mean “no”. Instead, it means, “go and do more work” before you eventually have made the case for it to be approved and pass through the gate.</li>\n<li>Since they are approved as a batch the requirements then typically travel together through the system. Because of the size of the batch, this can look like a snake eating a rodent — slow and uneven flow. For individuals downstream from the approval and funding process it often means you are threatened with starvation and little work for a significant period of time before then finding yourself working overtime and weekends when the batch gets thrown over the fence (often with a now unrealistic delivery date attached).</li>\n</ol>\n<p>There are more than the above three, but fundamentally, big batch funding and approval processes drive work upstream and make it difficult to smoothly flow work quickly through the process. The batching creates a myriad of inefficiencies in the end-to-end process that the up-front approvers have poor visibility of.</p>\n<p>Lean and Agile principles and practices offer solutions to this: dynamic prioritisation, pull systems, small buffers, breaking the work down, funding the capacity not the work, etc. But whatever practices you call on to solve these problems, it must be approached with a systems thinking mindset. This requires:</p>\n<ul>\n<li>an understanding of how the whole system works, from the lightbulb moment to the point when value has been delivered.</li>\n<li>an appreciation and anticipation of the effects that any changes might have.</li>\n<li>an understanding of the various trade-offs, in particular between control and speed.</li>\n<li>an understanding of which measures of the system really matter.</li>\n<li>PDSA feedback loops that measure the effect of change on those measures.</li>\n</ul>\n<p>And here, we’re just looking at the funding and approval part of the system! Consider the potential in the other “components” of the system that delivers value via I.T. such as the provisioning of hardware and environments. The message I’m trying to convey is that delivering value through the product development pipeline is a dynamic complex system with many moving parts and interactions. A reductionist approach, that focuses on individual parts of this system will likely yield improvements and efficiencies in that area – but often leads to an overall deterioration of the performance of the end-to-end system. I’ve attempted to illustrate the issue in one aspect of the upstream process, but there are many other areas that need to be considered from a systems thinking perspective.</p>\n<p>Ultimately, improving the delivery of value through I.T. requires a systemic approach that considers all of the moving parts: from the lightbulb moment all the way through the system as that idea is refined, realised and released to end-users and customers. If you think about it, Systems Thinking in I.T. is not just a nice to have, it’s essential.</p>\n","title":"Systems Thinking and I.T.","date":"March 18, 2012","featuredImage":{"node":{"altText":"","localFile":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='259'%20viewBox='0%200%20400%20259'%20preserveAspectRatio='none'%3e%3cpath%20d='M398%2097h-2c0-2-4%202-6%206l-1%205-1%201c-2%200-4%202-4%204%201%202-1%202-3%200-1-1-1-1-1%201%201%203-1%208-2%207v-1l-1-2-2%202v1l-1%202c0%202-2%204-2%202-1-1-1-1-2%201l-2%202-1%202c1%201%200%202-1%202h-1c1-2%201-2-2-1-2%201-3%203%200%202l1%201-5%201-1%201%201%201v1h1c2-1%204-1%203%201h-2l-1%201v1l-1%202h-3l-3%203c-4%200-5%201-3%202v1c-2%200-2%201-2%202l-1%203-5%206-4%203v4c-1-1-5%202-4%203h-2v1h-1c-2%200-3%203-3%205l-1%201c-2-1-4%201-3%203l-1%201-1-2c-1-1-1-1-1%201l-2%203c-1%200-6%206-10%2013l-9%2012h-1l2%201a1541%201541%200%200096-9c3%200%203%200%203-5v-6l-12%202a1041%201041%200%2000-82%2017c0-1%2014-11%2038-26l20-14%2018-19%2018-19V95l-2%202m-213%2062c-4%202-4%205%202%208%2010%204%2034%205%2042%200%206-2%203-8-5-9l-3-1%202%202c4%203%204%206%200%208-6%202-26%202-30%200-6-3-6-6-2-8l3-2h-3l-6%202m44%2017c-7%202-8%204-5%207%209%207%2042%204%2034-3-3-4-21-6-29-4m3%202c-4%202-3%204%202%206%208%202%2019%201%2019-3-1-3-15-5-21-3m29%2015c-8%202-2%207%209%207%2013%200%2013-7-1-8l-8%201'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5432098765432098,"src":"/static/32f7f4febf103b8f97b09d6903fb0905/724c8/Thinking-pencil.jpg","srcSet":"/static/32f7f4febf103b8f97b09d6903fb0905/84d81/Thinking-pencil.jpg 250w,\n/static/32f7f4febf103b8f97b09d6903fb0905/f0719/Thinking-pencil.jpg 500w,\n/static/32f7f4febf103b8f97b09d6903fb0905/724c8/Thinking-pencil.jpg 1000w","sizes":"(max-width: 1000px) 100vw, 1000px"}}}}}},"previous":{"uri":"/real-options-embracing-uncertainty/","title":"Real Options: Embracing Uncertainty"},"next":null},"pageContext":{"id":"cG9zdDoyMg==","previousPostId":"cG9zdDoxMDEw","nextPostId":null}},"staticQueryHashes":["104267996","1682016598","848497233"]}