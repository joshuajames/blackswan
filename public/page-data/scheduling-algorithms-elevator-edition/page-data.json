{"componentChunkName":"component---src-templates-blog-post-js","path":"/scheduling-algorithms-elevator-edition/","result":{"data":{"post":{"id":"cG9zdDo0MDU1","excerpt":"<p>This Popular Mechanics article about Elevator Scheduling Algorithms is well worth a read. This part in particular struck me: With the elevators directing themselves, engineers had to spell out rules for when &#8230; </p>\n<div><a href=\"/scheduling-algorithms-elevator-edition/\" class=\"more-link\">Read More</a></div>\n","content":"<p><a href=\"http://www.popularmechanics.com/technology/infrastructure/a20986/the-hidden-science-of-elevators/\">This Popular Mechanics article</a> about Elevator Scheduling Algorithms is well worth a read.</p>\n<p>This part in particular struck me:</p>\n<blockquote>\n<p class=\"body-el-text standard-body-el-text\">With the elevators directing themselves, engineers had to spell out rules for when to go where. The simplest method was for the elevators to shuttle back and forth between predefined &#8220;terminal floors&#8221; at scheduled intervals. It was like taking a bus—you waited for the 3:10 car up to the 10th floor, and then found your way from there. This, of course, was grossly inefficient. During busy times of day, the elevator cabs would waste everyone&#8217;s time sitting at a terminal floor until their scheduled departure. During off-peak hours they would make pointless empty trips.</p>\n<p class=\"body-el-text standard-body-el-text\">By 1965 it was clear to everyone that this was a bad idea.</p>\n</blockquote>\n<p>So, it took until 1965 before a &#8220;grossly inefficient&#8221; (and no doubt annoying) algorithm was recognised by enough people to be considered not good enough?! How long might it take Product Managers to recognise the limitations of today&#8217;s more common approaches, I wonder.</p>\n<p>Another thing to note is that Elevator algorithms aren&#8217;t optimising for efficiency:</p>\n<blockquote><p>Sometimes, it&#8217;s actually better to make a passenger&#8217;s ride <em data-redactor-tag=\"em\">longer</em>. Imagine two scenarios, one in which your elevator takes 10 seconds to arrive and then one minute to reach your destination, and another in which each portion takes thirty seconds. <strong>Many people find waiting so painful that they&#8217;d prefer the first option, even though they&#8217;d reach their destination 10 seconds later</strong> (though people who feel claustrophobic in elevators would prefer to minimize time inside the car). Accordingly, some elevators optimize not for time, but for a customized &#8220;<u data-redactor-tag=\"u\">pain</u><a class=\"body-el-link standard-body-el-link\" href=\"http://o\"><u data-redactor-tag=\"u\"> index</u></a>,&#8221; in which the computer system weighs the awfulness of each kind of delay.</p></blockquote>\n<p>Minimising cycletime (from button press to arrival) isn&#8217;t the optimal result in this case, despite what you might expect. It seems that we would prefer to have a longer &#8220;in-process&#8221; journey if that means we can sooner reduce the <em>uncertainty</em> of when we might start the journey. It is waiting combined with <em>uncertainty</em> that is extra painful for us. As a result, pre-process waits are perceived as worse than in-process waits.</p>\n<p>What the article doesn&#8217;t say is that post-process waits are also considered worse than pre-process waits, because there is no further value being added. For example, waiting to check out of a hotel is perceived as being more painful than waiting to check in. Continuous Delivery and reducing the cycletime of the &#8220;last mile&#8221; to production is possibly an easier sell because of this phenomenon. The value-adding changes have already been made, so why do I have to then wait for those changes to be pushed to production? (I hope to one day see a fraction of this urgency being applied upstream of development, where <a href=\"http://blackswanfarming.com/cost-of-delay/\">a lot of time is currently wasted</a>.)</p>\n<p>Optimising elevators for minimal &#8220;pain&#8221; makes sense. In doing so, as in most service settings, we expect everyone to be treated equally though. Delaying all people wearing jeans in order to provide a speedier service to those wearing suits would be considered offensive. Here though, is a key difference between Product Development and service settings – one that is often overlooked or purposely ignored in the design of a scheduling system – the value of the items in process.</p>\n<p>The items travelling through a Product Development system have hugely different <a href=\"http://blackswanfarming.com/cost-of-delay/\">Cost of Delay</a> – every backlog I have seen with quantified Cost of Delay has a <a href=\"http://blackswanfarming.com/the-problem-with-projects/\">power law distribution</a>. The items also have quite different size, and consequently <a href=\"http://blackswanfarming.com/cost-of-delay-divided-by-duration/\">block the team</a> for different lengths of time. Ignoring <em>either</em> of these will result in a much worse outcome.</p>\n<p>If you&#8217;re interested in a scheduling algorithm that maximises value delivered in Product Development, you can learn about <a href=\"http://blackswanfarming.com/cost-of-delay-divided-by-duration/\">CD3 here</a>.</p>\n","title":"Scheduling Algorithms – Elevator Edition","date":"May 27, 2016","featuredImage":{"node":{"altText":"","localFile":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='267'%20viewBox='0%200%20400%20267'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20134v133h221l-1-2c-2-3-2-4-1-4l2%203c3%204%2011%205%2010%200%200-3-6-9-7-7h-2l-1-1c0-1-6%200-9%202-2%200-3%202-4%203h-1c-2%200%202-6%205-7%208-5%2019%201%2021%2010%200%203%200%203%207%203l7-1h1c0%202%2019%201%2019-1%200-4-5-8-11-10-3-1-4-1-3-2%206-1%2014%204%2016%2011v3h34l-1-3c-3-7-12-10-19-6l-3%202v-2c0-1%200-2-1-1-2%201-1-2%202-4%209-6%2022-1%2024%2010v4h19v-7a285%20285%200%20011-29l1-15%201%2014v37h74V133l-1-82-1%2048-3-7a446%20446%200%2001-24-41c-2%200-3%202-1%202l2%201-2%202c-3%203-3%207%201%2013%202%205%203%209%201%2012%200%202-1%202-1%201l-2-1-1%201c1%201-2%202-3%200-3-1-4-1-4%201s-6%204-12%204l-1%201c0%202-9%202-16%201l-5%201-1%201-2-1%205%2010v2l2%201%203%201%202%201c4%200%206%201%206%202%200%202-13-2-14-5l-3-1-8-4c-7-4-9-7-5-7l1-1-6-5-2-2c1-2%200-3-1-2l-1%208v8h2c2-1%203%200%205%202%204%202%203%204-2%204l-4%201h-4l-7%203c-4%204-7%205-11%204l-4%201c-1%201-2%201-3-1l-2-2v3c-1%204-3%204-3%200v-3l-2%202c-2%202-2%202-9%202h-8l-3%201-3%201h-3c-3%200-5-3-4-8%200-2%200-2-3-2-2%200-2%200%201-1h6c2%202%203%202%202%200s-5-4-10-4c-8%200-14%209-11%2016%201%204%206%209%209%209l1%201h-5l3%201%204%202v1c-8%204-22-13-17-21l1%204%202%206h1c-2-5-2-12-1-15%204-9%2019-10%2025-2%202%202%206%201%206-3l2-2V86l-2-3v-8l-1-11c-2-4-1-7%202-10%201-1%202-6%200-9V26c2-5%201-8-2-8s-4-1-3-3-1-4-3-2c-1%202-9%205-13%205-8%200-15-6-16-15l-1-3h-36v11a7158%207158%200%2001-1%209V0H0v134M225%2022c-4%202-7%208-8%2013-1%2019%2023%2027%2032%2012%202-4%203-8%201-5-1%201-1%201-1-2%202-7-2-14-8-18h-16m4%203c-6%203-9%2012-5%2018%205%208%2015%208%2021%200%207-10-5-23-16-18m34%202c-7%205-6%2015%202%2020s19-2%2018-12c-1-6-3-5-2%200%201%2013-14%2017-19%207-6-11%206-21%2015-14l3%201c0-2-6-5-10-5-3%200-5%201-7%203m-35%201c-4%203-5%2014-1%2017%2010%208%2022-3%2016-14-2-5-10-7-15-3m3%204c-4%204-3%2012%202%208h1l-2%202c-3%201-4%203-1%203s8-7%208-11l-5-5-3%203m34-2v3l1%206c0%206%203%208%203%202v-2l1%202c1%203%204%204%206%202V31c-2-3-6-1-6%202%200%202%200%202-1%201v-3c0-2-2-2-4-1m-35%2029h-3c-2%200-3%201-3%202l-1%201-1%201v2l-1%201c-4-1-4%2011-1%2017%207%2012%2027%2012%2029-1%202-12%200-17-7-22-3-2-11-3-12-1m0%203c-4%202-7%207-7%2012%200%2013%2016%2017%2023%207%206-10-5-23-16-19m37%200c-11%204-10%2019%200%2024%206%202%2011%200%2014-5%207-9-4-23-14-19m-1%203l-2%202h3c7%200%2010%202%207%206v2c3%202%202%204%200%206s-2%202%200%203c3%200%206-2%207-7%203-9-8-18-15-12m128%2048l-8%2011c-3%204-6%208-8%208-6%204-12%2012-15%2020%200%202-2%204-3%205l-1%203%205-4a88%2088%200%200118-17h2l1%201%205%201%204%201%203%203%202%202c2%200%201-36-1-37l-4%203m-94%2018l-1%207v2l2%201c2-1%203-3%201-3v-2c1-2%201-2%203%200h1c0-1%200-2%201-1l1-2%202-2h3c1-1%201-1%201%201l1%202%201%202c1%202%201%202%202%201s1-1%201%201l1%204%202%204%201%202%203%201%201-10-1-12c-1%200-2%201-2%203s0%202-1%201l-4-1c-4%201-4%200-5-2l-2-2-7-1h-5v6'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.4970059880239521,"src":"/static/c69a9d66eea4ee3a7c04501c22b1e8c4/d3fff/elevator-buttons.jpg","srcSet":"/static/c69a9d66eea4ee3a7c04501c22b1e8c4/84d81/elevator-buttons.jpg 250w,\n/static/c69a9d66eea4ee3a7c04501c22b1e8c4/f0719/elevator-buttons.jpg 500w,\n/static/c69a9d66eea4ee3a7c04501c22b1e8c4/d3fff/elevator-buttons.jpg 838w","sizes":"(max-width: 838px) 100vw, 838px"}}}}}},"previous":{"uri":"/managing-queues-product-development/","title":"Managing Queues in Product Development"},"next":{"uri":"/noprojects/","title":"#NoProjects"}},"pageContext":{"id":"cG9zdDo0MDU1","previousPostId":"cG9zdDo0MDgz","nextPostId":"cG9zdDo0MDQ2"}},"staticQueryHashes":["104267996","1682016598","848497233"]}