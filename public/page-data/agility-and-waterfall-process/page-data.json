{"componentChunkName":"component---src-templates-blog-post-js","path":"/agility-and-waterfall-process/","result":{"data":{"post":{"id":"cG9zdDoxNA==","excerpt":"<p>A couple of days ago I tweeted a seemingly random thought: &#8220;Waterfall is not the opposite of Agile. An organisation may use a waterfall process and still be agile.&#8221; Now, &#8230; </p>\n<div><a href=\"/agility-and-waterfall-process/\" class=\"more-link\">Read More</a></div>\n","content":"<p>A couple of days ago I <a href=\"https://twitter.com/joshuajames/status/309390694433308672\" target=\"_blank\" rel=\"noopener\">tweeted </a>a seemingly random thought:</p>\n<blockquote><p><b>&#8220;Waterfall is not the opposite of Agile. An organisation may use a waterfall process and still be agile.&#8221;</b></p></blockquote>\n<p>Now, I completely accept that within twitter&#8217;s 140 character quantum this could be easily misconstrued. What I was trying to say is that <!--more-->we can still have a single-pass, stage-gated process (like our waterfall metaphor) and still improve or increase agility.</p>\n<p>The genesis for the thought came partially from a comment made by one of the reviewers of a session I proposed for Agile2013 conference. The comment was regarding two simplified Cumulative Flow Diagrams (CFD) highlighting <i>before</i> and <i>after</i> we made some simple changes to the way a team of 50 worked on a core legacy system.</p>\n<h4>Before: Cumulative Flow Diagram</h4>\n<div><a href=\"http://blackswanfarming.com/wp-content/uploads/2013/03/Before-–-Feast-and-Famine.png\"><img alt=\"Before – Feast and Famine\" src=\"http://blackswanfarming.com/wp-content/uploads/2013/03/Before-–-Feast-and-Famine.png\" /></a></div>\n<div>\n<h3></h3>\n<h4>After: Cumulative Flow Diagram</h4>\n</div>\n<div><a href=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_867,h_565/v1613032232/W/After-–-Smooth-Sustainable-Flow/After-–-Smooth-Sustainable-Flow.png\"><img loading=\"lazy\" width=\"867\" height=\"565\" class=\"alignnone size-medium wp-image-38\" alt=\"After – Smooth Sustainable Flow\" src=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_867,h_565/v1613032232/W/After-–-Smooth-Sustainable-Flow/After-–-Smooth-Sustainable-Flow.png\" srcset=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/v1613032232/W/After-–-Smooth-Sustainable-Flow/After-–-Smooth-Sustainable-Flow.png 867w, https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_300,h_195,c_scale/v1613032232/W/After-–-Smooth-Sustainable-Flow/After-–-Smooth-Sustainable-Flow-300x195.png 300w\" sizes=\"(max-width: 867px) 100vw, 867px\" /></a></div>\n<p>The reviewer made the following comment about the &#8220;after&#8221; CFD:</p>\n<blockquote><p>&#8220;[The after diagram] visually looks like overlapping mini-waterfalls with equal time for scoping, design, development and test. Some – and maybe many – folks in the community would not consider such an approach to be an example of increased agility&#8221;</p></blockquote>\n<p>And yet, here are the results:</p>\n<p><b>Speed:</b></p>\n<div><a href=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_852,h_582/v1613032234/W/Results-–-Faster-Delivery/Results-–-Faster-Delivery.png\"><img loading=\"lazy\" width=\"852\" height=\"582\" class=\"alignnone size-medium wp-image-37\" alt=\"Results – Faster Delivery\" src=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_852,h_582/v1613032234/W/Results-–-Faster-Delivery/Results-–-Faster-Delivery.png\" srcset=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/v1613032234/W/Results-–-Faster-Delivery/Results-–-Faster-Delivery.png 852w, https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_300,h_204,c_scale/v1613032234/W/Results-–-Faster-Delivery/Results-–-Faster-Delivery-300x204.png 300w\" sizes=\"(max-width: 852px) 100vw, 852px\" /></a></div>\n<p><b>Quality:</b></p>\n<div><a href=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_844,h_564/v1613032236/W/Results-–-Better-quality/Results-–-Better-quality.png\"><img loading=\"lazy\" width=\"844\" height=\"564\" class=\"alignnone size-medium wp-image-36\" alt=\"Results – Better quality\" src=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_844,h_564/v1613032236/W/Results-–-Better-quality/Results-–-Better-quality.png\" srcset=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/v1613032236/W/Results-–-Better-quality/Results-–-Better-quality.png 844w, https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_300,h_200,c_scale/v1613032236/W/Results-–-Better-quality/Results-–-Better-quality-300x200.png 300w\" sizes=\"(max-width: 844px) 100vw, 844px\" /></a></div>\n<p><b>Value:</b></p>\n<div><a href=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_827,h_592/v1613032238/W/Results-–-More-Value/Results-–-More-Value.png\"><img loading=\"lazy\" width=\"827\" height=\"592\" class=\"alignnone size-medium wp-image-35\" alt=\"Results – More Value\" src=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_827,h_592/v1613032238/W/Results-–-More-Value/Results-–-More-Value.png\" srcset=\"https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/v1613032238/W/Results-–-More-Value/Results-–-More-Value.png 827w, https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_300,h_214,c_scale/v1613032238/W/Results-–-More-Value/Results-–-More-Value-300x214.png 300w, https://res.cloudinary.com/blackswanfarming/images/f_auto,q_auto/w_350,h_250,c_scale/v1613032238/W/Results-–-More-Value/Results-–-More-Value-350x250.png 350w\" sizes=\"(max-width: 827px) 100vw, 827px\" /></a></div>\n<p>So, more value, significantly faster end-to-end, and with better quality. And yet some folks in the community would (apparently) not consider this an example of increased agility. Hmmm&#8230;</p>\n<p>I accept that the process is still waterfall – intentionally so. Instead we left their process largely intact, put Work-in-Progress limits in place and changed the order of some key tasks around so it was more test driven. But we <i>mostly</i> focused on addressing issues caused during the fuzzy-front-end. We made no changes in engineering at all due to the exorbitant cost of retrofitting over 7 million of lines of code. Colocation wasn&#8217;t an option. Introducing Scrum would have caused havoc.</p>\n<p>The question I have is quite simple: has this increased the agility of the organisation?</p>\n<p>I did get some feedback from the twitterati about my <a href=\"https://twitter.com/flowchainsensei/status/309390828403580928\" target=\"_blank\" rel=\"noopener\">apparently mad</a> statement (accepting that twitter seems almost designed to create misunderstandings).</p>\n<p><a href=\"https://twitter.com/agustinvillena/status/309639220752965633\" target=\"_blank\" rel=\"noopener\">Someone</a> even went so far to kindly provide me with what they felt was the definition of Waterfall and Agile:</p>\n<blockquote><p><b>Waterfall = big batches + no feedback + late learning</b><br />\n<b><br />\n</b><b>Agile = baby steps + early feedback + fast learning</b></p></blockquote>\n<p>Perhaps I&#8217;ve <a href=\"https://twitter.com/flowchainsensei/status/309395895764529154\" target=\"_blank\" rel=\"noopener\">no idea</a> about this stuff – but I&#8217;m not so sure that either of these terms are that well defined. (I get that twitter&#8217;s quantum makes this difficult).</p>\n<p>The term <a href=\"http://www.idinews.com/waterfall.html\" target=\"_blank\" rel=\"noopener\">&#8220;Waterfall&#8221;</a> supposedly comes from Winston Royce&#8217;s 1970 paper. The problem is, that Royce doesn&#8217;t even mention the term waterfall in the paper. Neither does he describe such an inflexible process. The other potential originator, Barry Boehm, denies originating the term too. In reality, &#8220;Waterfall&#8221; is mostly a straw man, constructed by consultants and coaches as a non-existent alternative to their proposed solution. Quelle surprise!</p>\n<p>Wikipedia defines the Waterfall model as such:</p>\n<blockquote><p>The <b>waterfall model</b> is a <a title=\"Sequence\" href=\"http://en.wikipedia.org/wiki/Sequence\">sequential</a> <a title=\"Design\" href=\"http://en.wikipedia.org/wiki/Design\">design</a> process, often used in <a title=\"Software development process\" href=\"http://en.wikipedia.org/wiki/Software_development_process\">software development processes</a>, in which progress is seen as flowing steadily downwards (like a <a title=\"Waterfall\" href=\"http://en.wikipedia.org/wiki/Waterfall\">waterfall</a>) through the phases of Conception, Initiation, <a title=\"Analysis\" href=\"http://en.wikipedia.org/wiki/Analysis\">Analysis</a>, <a title=\"Software design\" href=\"http://en.wikipedia.org/wiki/Software_design\">Design</a>, Construction, <a title=\"Software testing\" href=\"http://en.wikipedia.org/wiki/Software_testing\">Testing</a>, <a title=\"Implementation\" href=\"http://en.wikipedia.org/wiki/Implementation\">Production/Implementation</a>, and <a title=\"Software maintenance\" href=\"http://en.wikipedia.org/wiki/Software_maintenance\">Maintenance</a>.</p></blockquote>\n<p>So, according to this definition (feel free to provide a better source in the comments), the waterfall model is a sequential one-way development process. It does not specify big batches, or zero feedback or the requirement for learning to be late. Of course it doesn&#8217;t! That&#8217;s just a <a href=\"http://www.start.ca/users/chesswiz/Diversion.htm\" target=\"_blank\" rel=\"noopener\">straw man diversion</a> built up in order to knock down and claim a non-existent victory.</p>\n<p>Defining Agile is similarly problematic. At least we have the <a href=\"http://agilemanifesto.org/\" target=\"_blank\" rel=\"noopener\">Agile Manifesto</a> to guide us, but famously those signing the Agile Manifesto didn&#8217;t manage to agree anything beyond the four values and the 12 principles. Neither of these mention baby steps, early feedback, or fast learning (although those may be the outcome). My issue is not with the definition, it&#8217;s more that there is supposedly an accepted or orthodox dogma that, if I don&#8217;t agree with it, I must be mad!</p>\n<p>Which brings me to my tweet <a href=\"https://twitter.com/joshuajames/status/309392052599263233\" target=\"_blank\" rel=\"noopener\">moments later</a> (in an attempt to clarify what I was getting at) proposing the following:</p>\n<blockquote><p><b>Thought experiment:</b> <b>You use a single-pass, stage-gated process with an e2e cycle time of 1 week.</b>  <b>Are you &#8220;agile&#8221;?</b></p></blockquote>\n<p>And a <a href=\"https://twitter.com/joshuajames/status/309393875871600640\" target=\"_blank\" rel=\"noopener\">clarification</a>:</p>\n<blockquote><p><b>The work you are flowing e2e could be iterations (i.e. rework) or increments. 1 week feedback loop.</b></p></blockquote>\n<p>The point I was trying to make is that, Agile and a Waterfall process are not <i>opposites</i> of each other. You can use a supposedly waterfall process, and still have some measure of agility.<br />\nOn top of this, &#8220;Agile&#8221; is <i>not</i> a binary, yes/no condition. Your organisation as a whole (not just IT) can only be more or less Agile. This immediately raises a question: how might you objectively measure this? <a href=\"https://twitter.com/joshuajames/status/309394459324461057\" target=\"_blank\" rel=\"noopener\">My view</a>:</p>\n<blockquote><p><b>The absolute zero of Agility is an e2e cycle time of infinity.</b></p></blockquote>\n<p>There are plenty of teams, projects and organisations who use Scrum or some other flavour of Agile and yet their cycle time from the lightbulb moment (when someone has an idea) to when that idea is rendered in working software in a live, production environment is measured in months or even years.</p>\n<p>My simple suggestion is this:<br />\nOne of the key measures of your organisation&#8217;s agility is your cycle time from Lightbulb to Live — regardless of whether you follow a single-pass, stage-gated &#8220;waterfall&#8221; process or not. So, I would maintain: waterfall is not the opposite of agile.</p>\n","title":"Can you use a Waterfall process and still “be agile”?","date":"March 08, 2013","featuredImage":{"node":{"altText":"","localFile":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='261'%20viewBox='0%200%20400%20261'%20preserveAspectRatio='none'%3e%3cpath%20d='M129%2070C83%2083%2083%2083%2082%2086c0%203%206%2028%208%2031%203%203%205%203%2050-10%2044-12%2046-13%2048-16%201-2-5-27-8-31-2-3-7-3-51%2010m26-5a12358%2012358%200%2001-70%2021c-1%202%200%206%202%2016%204%2013%206%2017%2010%2016a11353%2011353%200%200189-27c1-2-5-27-7-30-2-2-7-1-24%204m-35%20109l-80%2073-6%205h61l46-1h-16l80-72%2079-71-18-1-44-1h-27l-75%2068m105%2078'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.5337423312883436,"src":"/static/8839d52d3dd35af0f79eb51efc9df2e7/b659b/After-%25E2%2580%2593-Smooth-Sustainable-Flow.png","srcSet":"/static/8839d52d3dd35af0f79eb51efc9df2e7/002c1/After-%25E2%2580%2593-Smooth-Sustainable-Flow.png 250w,\n/static/8839d52d3dd35af0f79eb51efc9df2e7/53f65/After-%25E2%2580%2593-Smooth-Sustainable-Flow.png 500w,\n/static/8839d52d3dd35af0f79eb51efc9df2e7/b659b/After-%25E2%2580%2593-Smooth-Sustainable-Flow.png 867w","sizes":"(max-width: 867px) 100vw, 867px"}}}}}},"previous":{"uri":"/lessons-on-speed-samsung-and-apple/","title":"Lessons on speed: Samsung and Apple"},"next":{"uri":"/whats-required-vision-or-passion/","title":"What’s required: Vision or Passion"}},"pageContext":{"id":"cG9zdDoxNA==","previousPostId":"cG9zdDoyMjc=","nextPostId":"cG9zdDoxNQ=="}},"staticQueryHashes":["104267996","1682016598","848497233"]}