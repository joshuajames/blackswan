{"data":{"post":{"id":"cG9zdDo1ODQ2","excerpt":"<p>What is a product backlog? What problem is it supposed to solve? What problems sometimes arise when using one? So many questions, and not a lot of guidance out there &#8230; </p>\n<div><a href=\"/the-product-backlog-one-safe-waiting-place/\" class=\"more-link\">Read More</a></div>\n","content":"<p>What is a product backlog? What problem is it supposed to solve? What problems sometimes arise when using one? So many questions, and not a lot of guidance out there for Product Managers and Product Owners.</p>\n<h3>What is a Backlog?</h3>\n<p>The Agile Alliance&#8217;s <a href=\"https://www.agilealliance.org/glossary/backlog\">definition</a> starts off as follows:</p>\n<blockquote><p>&#8220;A backlog is a list of features or technical tasks which the team maintains and which, at a given moment, are known to be necessary and sufficient to complete a project or a release&#8221;</p></blockquote>\n<p>I suspect this definition was written back in the 1990s. The first sentence reflects a historical view for many organisations. In a world with long-lived stable product teams, the statement &#8220;necessary and sufficient to complete a project&#8221; is like travelling back in time. Adding &#8220;&#8230;or a release&#8221; is even <em>more</em> anachronistic these days. Unless you&#8217;ve been hiding under a rock Continuous Integration and Continuous Delivery makes thinking in &#8220;releases&#8221; very much an outdated concept. It goes on to say:</p>\n<blockquote><p>&#8220;The backlog is the primary point of entry for knowledge about requirements, and the single authoritative source defining the work to be done.&#8221;</p></blockquote>\n<p>Where the Agile Alliance does get it right is that the Backlog is the &#8220;primary point of entry&#8221;, and &#8220;the single authoritative source&#8221; and that the Backlog contains a list of &#8220;things&#8221; which the team themselves should be maintaining.</p>\n<p>So, let me suggest a rewrite of the Agile Alliance definition, you know, updated for this decade&#8230;</p>\n<blockquote><p>A backlog is a dynamic list of potentially valuable options which the team maintains. The currently shared view of the priority order of options should be visible, at least to the team, but also to stakeholders. The backlog, however, is emphatically NOT a commitment.</p>\n<p>The <a href=\"http://blackswanfarming.com/prioritisation/\">priority order</a> should be allowed – encouraged even– to change as the team learns about <a href=\"http://blackswanfarming.com/understanding-value/\">where the value is</a>, how that <a href=\"http://blackswanfarming.com/urgency-profiles/\">value is leaking away over time</a>, and <a href=\"http://blackswanfarming.com/challenges-with-cost-of-delay-and-cd3-wsjf-duration/\">how big and complex the items on the list are likely to be</a>. In this way, the priority order should be dynamic, not static or fixed.</p>\n<p>The items on the backlog should vary in size and shape, with the most likely items to be worked on next having been broken down with just enough detail for the team to start work on them – and this should only be done &#8220;just-in-time&#8221; for the team to work on them.</p>\n<p>Lastly, the backlog should be treated as a &#8220;<a href=\"http://blackswanfarming.com/fuzzy-front-end/\">safe waiting place</a>&#8221; and it should be cheap and fast for potentially valuable ideas to flow to the backlog.&#8221;</p></blockquote>\n<h3>Why use a Backlog?</h3>\n<p>The above definition should give you a few hints about this. At its heart though, the Backlog is necessary in Product Development because our <a href=\"http://blackswanfarming.com/challenges-with-cost-of-delay-and-cd3-wsjf-duration/\">capacity to develop is limited</a>, but the things we could use that capacity for is unlimited. These two things will never be in balance. In economic terms, there is a supply and demand imbalance. Believe it or not, this is healthy! A product with a fixed set of ideas about how you might improve it is either dying, or it is sorely lacking in feedback. As a result, our Product Development system needs a safe waiting place.</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n<p dir=\"ltr\" lang=\"en\">Balancing Supply &amp; Demand is a myth in Product Development. The end-to-end system needs a safe waiting place to sift for Black Swans.</p>\n<p>— Joshua J. Arnold (@joshuajames) <a href=\"https://twitter.com/joshuajames/status/878111162000261121?ref_src=twsrc%5Etfw\">June 23, 2017</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p>The other thing to recognise is that new ideas <a href=\"http://blackswanfarming.com/how-to-tilt-the-innovation-playing-field/\">arrive randomly</a>. The most valuable changes you could make could pop into your (or others) head at any time. So a Backlog that is static or fixed is likely to miss out on or at least delay those opportunities. Crucially, the arrival of good ideas is highly unlikely to align with the usual <a href=\"http://blackswanfarming.com/fund-the-teams-not-the-project/\">quarterly or annual planning processes</a>. For this reason, the Backlog should act as a way for those late-arriving, really high <a href=\"http://blackswanfarming.com/cost-of-delay/\">cost of delay</a> ideas to flow to – without disrupting whatever the team are trying to focus on today.</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n<p dir=\"ltr\" lang=\"en\">The &#8220;Dynamic&#8221; bit is crucial.<br />\nBacklogs that are static and/or closed to incoming options is economically stupid.<br />\nDefer commitment!</p>\n<p>— Joshua J. Arnold (@joshuajames) <a href=\"https://twitter.com/joshuajames/status/878112849939189760?ref_src=twsrc%5Etfw\">June 23, 2017</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p>We often hear people say that the most important word in a Product Manager&#8217;s vocabulary is &#8220;No.&#8221; In our view, this is <a href=\"http://blackswanfarming.com/product-roadmaps-and-cost-of-delay/\">mostly a distraction</a>. Much better to worry less about saying &#8220;No&#8221; and instead, try saying &#8220;Not yet&#8221; – quickly and cheaply placing it some way down the list. And who knows – maybe you&#8217;re wrong? Isn&#8217;t it possible that you&#8217;ll learn something down the road that changes your mind? Instead, make it super fast and really cheap to capture an idea, surfacing assumptions about value and urgency. Then, focus energy on speeding up the fuzzy front end and don&#8217;t waste your time trying to say no. Just let the less valuable and urgent options wither and die. As long as there isn&#8217;t some activity happening (which there shouldn&#8217;t be!) it costs us almost nothing to simply store them.</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n<p dir=\"ltr\" lang=\"en\">One of the biggest advantages of Backlogs is that it costs near zero to add stuff, and &#8220;not removing things&#8221; has zero economic impact.</p>\n<p>— Joshua J. Arnold (@joshuajames) <a href=\"https://twitter.com/joshuajames/status/878116412601978884?ref_src=twsrc%5Etfw\">June 23, 2017</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p>The other reason not to worry about saying no too much is that you risk someone maintaining their wishlist elsewhere. Going back to the Agile Alliance definition above, what we want is the &#8220;single authoritative source&#8221;. Without a backlog you may well end up with three or four different lists hidden away somewhere.</p>\n<p>One other things that we often hear about: a long backlog is not a bad thing. It tells us that there is plenty of scope to improve a product. Doesn&#8217;t at all mean you have to do them all – of course not. A periodic archiving of things that haven&#8217;t been pulled into development over the last 13 months gives something a little over a year for any annually recurring issues that might crop up. It costs almost zero to archive. If you need some storage, one of my clients makes extremely large hard drives that they would be willing to sell to you.</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n<p dir=\"ltr\" lang=\"en\">Consider:<br />\nThere are many paths.<br />\nKnowing there are lots of valuable options available both frees the team and underscores their value.</p>\n<p>— Joshua J. Arnold (@joshuajames) <a href=\"https://twitter.com/joshuajames/status/878218464120389633?ref_src=twsrc%5Etfw\">June 23, 2017</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<h3>#NoBacklogs</h3>\n<p>Whilst I completely understand much of the angst that the above hashtag is based on, it&#8217;s not a very well thought through proposition to just abandon the Backlog. Baby and bathwater. More in this thread for those interested in the more esoteric avenues of this discussion:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n<p dir=\"ltr\" lang=\"en\"><a href=\"https://twitter.com/hashtag/NoBacklogs?src=hash&amp;ref_src=twsrc%5Etfw\">#NoBacklogs</a> is stupidity.</p>\n<p>Backlog is a way to surface and share widely our *current set of assumptions* about the options ahead of us, allowing us to focus and constrain WIP, prevent overloading capacity. ❤️❤️❤️ <a href=\"https://t.co/wDbd4NWpp2\">https://t.co/wDbd4NWpp2</a></p>\n<p>— Joshua J. Arnold (@joshuajames) <a href=\"https://twitter.com/joshuajames/status/959904021048733696?ref_src=twsrc%5Etfw\">February 3, 2018</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<h3>Potential problems?</h3>\n<p>By far the biggest problem we typically observe in how Backlogs are used is when items on the backlog are treated as some sort of commitment. Avoid this at all costs. Be careful not to make promises about when items on a backlog will be done. As a Product Manager, you absolutely should be able to <a href=\"http://blackswanfarming.com/how-to-do-a-really-basic-forecast/\">provide a Forecast</a> – but always be super careful to make it clear that the forecast assumes a whole bunch of things, the biggest of which is that <em>nothing changes</em>. That&#8217;s rarely true. If stakeholders are uncomfortable with that, they either need some <a href=\"http://blackswanfarming.com/how-to-train-your-hippo-workshop-agile2017/\">training</a>, or they perhaps they&#8217;re just not cut out for the inherent <a href=\"http://blackswanfarming.com/risk-uncertainty-and-black-swans/\">uncertainties</a> involved Product Development.</p>\n<p>Second biggest problem is probably the big batch transfer of &#8220;requirements&#8221; into a backlog. A close cousin of this is the insistence that the whole backlog has to be broken down and refined for delivery. That would be very much premature. Again, avoid!</p>\n<p>As mentioned above, don&#8217;t be tempted into thinking that everything on the Backlog needs to be refined or groomed to perfection. This comes in two forms: 1) over processing so that <span style=\"text-decoration: underline;\">everything</span> on the backlog is broken down into nice small &#8220;goldilocks&#8221; (not too big, not too small) things to be developed. Instead the items on the backlog should be well-refined, and goldilocks sized toward the top, but no more than 1-2 weeks worth of work should be like that. To help distinguish, it sometimes helps to shift items that have been refined like this to a small &#8220;buffer&#8221;, which is distinct from the Backlog. This is somewhat akin to Scrum&#8217;s &#8220;Sprint Backlog&#8221;, as distinct from the &#8220;Product Backlog&#8221;.</p>\n<p>The second type of overprocessing you often see is the refining, grooming and polishing of items on the backlog to within an inch of their life. If the only discovery left downstream of the backlog is whether the team can copy and paste effectively, you may have gone a little too far. Of course, a team under pressure is likely to complain that &#8220;stories aren&#8217;t ready!&#8221;. The solution there is to lower their WIP and remove any pressure to &#8220;deliver&#8221; according to some pre-planned velocity figures. (<a href=\"http://blackswanfarming.com/velocity-needs-to-die-alternative-measures/\">I really wish Velocity would die.</a>) Leave room for the team to collaborate and figure out together the details. It also means you avoid wasted analysis on items that end up either waiting for some time (where the analysis goes stale) or that end up slipping down the list of priorities and not getting developed at all.</p>\n<p>I&#8217;m probably missing a whole bunch here. I&#8217;ll add them in as I spot them – or ping me (<a href=\"https://twitter.com/joshuajames\">twitter is good for that</a>) with suggestions!</p>\n<h3>References:</h3>\n<p><a href=\"http://blackswanfarming.com/how-to-tilt-the-innovation-playing-field/\">How to tilt the innovation playing field</a></p>\n<p><a href=\"http://blackswanfarming.com/single-prioritised-backlog-chat-with-john-cutler/\">Single Prioritised Backlog – chat with John Cutler</a></p>\n<h3>Want more?</h3>\n<p>If you&#8217;re interested in learning more about Backlogs, and a bunch of other essential tools for Product Managers, check out our <a href=\"http://blackswanfarming.com/product-management-training/\">Product Management training</a> <a href=\"http://blackswanfarming.com/product-management-training/\">here!</a> If you want to learn more about how to improve prioritisation, make better trade-off decisions and change the focus of conversation in your organisation, we also offer training in <a href=\"http://blackswanfarming.com/cost-of-delay-training/\">Cost of Delay and CD3</a>.</p>\n","title":"The Product Backlog – “One safe waiting place”","date":"November 15, 2018","featuredImage":{"node":{"altText":"Product Owner Training. Leading Product Development, Software Development,","localFile":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='270'%20viewBox='0%200%20400%20270'%20preserveAspectRatio='none'%3e%3cpath%20d='M214%2072c-6%203-9%2011-9%2020%201%207%204%2012%2015%2024%206%208%2014%2020%2014%2024%200%202%200%202-29-13-10-5-25-5-37-1-17%207-16%207-26%205l-9-1c-2%203%209%2015%2018%2021l4%203h-3l-8-3c-6-3-7-2-5%202s6%209%2012%2013l4%203h-6c-7-1-7%200-1%205%209%208%2025%2010%2042%205%2012-4%2022-3%2053%203%209%202%2012%202%2018-3%205-5%206-11%206-21-1-14-5-21-23-36-27-24-30-28-29-35%202-6%205-7%2013-5%203%202%203%202%203%205%200%208%205%2015%209%2014l4%202c6%207%2012%208%208%202-3-3-4-9-4-16%200-6-1-6-4-9-9-7-22-11-30-8m-24%20112l-19%202c-10%200-10%200-6%202%2011%204%2016%204%2029%203h22c10%203%2018%202%2028-1%206-1%206-1%204-2l-9-1-14-2c-13-3-26-3-35-1'%20fill='%23d3d3d3'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.4792899408284024,"src":"/static/642eb89bab8ff995213b807b48ee7c33/5d2c5/Black-Swan-%25E2%2580%2593-Moo.png","srcSet":"/static/642eb89bab8ff995213b807b48ee7c33/002c1/Black-Swan-%25E2%2580%2593-Moo.png 250w,\n/static/642eb89bab8ff995213b807b48ee7c33/53f65/Black-Swan-%25E2%2580%2593-Moo.png 500w,\n/static/642eb89bab8ff995213b807b48ee7c33/5d2c5/Black-Swan-%25E2%2580%2593-Moo.png 1000w,\n/static/642eb89bab8ff995213b807b48ee7c33/8d364/Black-Swan-%25E2%2580%2593-Moo.png 1500w,\n/static/642eb89bab8ff995213b807b48ee7c33/3ba25/Black-Swan-%25E2%2580%2593-Moo.png 2000w,\n/static/642eb89bab8ff995213b807b48ee7c33/6a713/Black-Swan-%25E2%2580%2593-Moo.png 2136w","sizes":"(max-width: 1000px) 100vw, 1000px"}}}}}},"previous":{"uri":"/on-trust-in-product-development/","title":"On “Trust” in Product Development"},"next":{"uri":"/cost-of-delay-and-cd3-prioritisation-at-scale/","title":"Cost of Delay and CD3 Prioritisation at Scale"}},"pageContext":{"id":"cG9zdDo1ODQ2","previousPostId":"cG9zdDo1ODkz","nextPostId":"cG9zdDo1ODEx"}}